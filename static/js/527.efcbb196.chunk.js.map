{"version":3,"file":"static/js/527.efcbb196.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.scss?0e19","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.scss?0ade","components/Reviews/Reviews.jsx","webpack://goit-react-hw-05-movies/./src/components/Movie/Movie.module.scss?674c","components/Movie/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__NCbA-\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport css from './Cast.module.scss';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const apiKey = 'd8ea0ad05a6720116583e1a3262a0452';\n  const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n  const [selectedMovie, setSelectedMovie] = useState({ cast: [] });\n\n  useEffect(() => {\n    axios\n      .get(movieUrl)\n      .then(response => {\n        setSelectedMovie(response.data);\n      })\n      .catch(error => {\n        console.error('Błąd: ' + error);\n      });\n  }, [movieUrl]);\n\n  return (\n    <div className={css.container}>\n      <ul>\n        {selectedMovie.cast.map(credit => (\n          <li key={credit.id}>\n            <a\n              href={`https://google.com/search?q=${credit.name}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {credit.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w185/${credit.profile_path}`}\n                  alt={`${credit.name} Profile`}\n                />\n              ) : (\n                <img src=\"./no-photo.jpg\" alt=\"No source found\" />\n              )}\n            </a>\n            <p>\n              {credit.name} as {credit.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__hG4v1\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport css from './Reviews.module.scss';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const apiKey = 'd8ea0ad05a6720116583e1a3262a0452';\n  const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`;\n  const [selectedMovie, setSelectedMovie] = useState({ results: [] });\n\n  useEffect(() => {\n    axios\n      .get(movieUrl)\n      .then(response => {\n        setSelectedMovie(response.data);\n      })\n      .catch(error => {\n        console.error('Błąd: ' + error);\n      });\n  }, [movieUrl]);\n\n  return (\n    <div className={css.container}>\n      <ul>\n        {selectedMovie.results.length === 0 ? (\n          <li>\n            <p>No reviews found.</p>\n          </li>\n        ) : (\n          selectedMovie.results.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movie_container__8FsSV\",\"containerAdditional\":\"Movie_containerAdditional__LuGN5\"};","import { Cast } from 'components/Cast/Cast';\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport css from './Movie.module.scss';\n\nexport function Movie() {\n  const { movieId } = useParams();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const apiKey = 'd8ea0ad05a6720116583e1a3262a0452';\n\n  const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`;\n\n  useEffect(() => {\n    axios\n      .get(movieUrl)\n      .then(response => {\n        setSelectedMovie(response.data);\n      })\n      .catch(error => {\n        console.error('Błąd: ' + error);\n      });\n  }, [movieUrl]);\n\n  return selectedMovie ? (\n    <>\n      <div className={css.container}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${selectedMovie.poster_path}`}\n          width={250}\n          height={400}\n          alt={selectedMovie.title}\n        />\n        <div>\n          <h2>{selectedMovie.title}</h2>\n          <p>User score: {Math.round(selectedMovie.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{selectedMovie.overview}</p>\n          <h4>Genres</h4>\n          <p>{selectedMovie.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <div className={css.containerAdditional}>\n        <ul>\n          <li>\n            <Link to={`/movie/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movie/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Routes>\n        <Route path=\"/cast\" element={<Cast />} />\n        <Route path=\"/reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  ) : (\n    <div>Loading...</div>\n  );\n}\n"],"names":["Cast","movieId","useParams","movieUrl","concat","_useState","useState","cast","_useState2","_slicedToArray","selectedMovie","setSelectedMovie","useEffect","axios","then","response","data","catch","error","console","_jsx","className","css","children","map","credit","_jsxs","href","name","target","rel","profile_path","src","alt","character","id","Reviews","results","length","review","author","content","Movie","_Fragment","poster_path","width","height","title","Math","round","vote_average","overview","genres","genre","join","Link","to","Routes","Route","path","element"],"sourceRoot":""}